# GitHub Actions workflow to publish new releases.
name: 'Publish releases'
on: workflow_dispatch

env:
  JAVA_VERSION: 21
  NODE_VERSION: 20

jobs:
  github:
    name: 'GitHub'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      version: '${{ steps.version.outputs.version }}'
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Fetch git tags' # Required for axion-release-plugin
        run: git fetch --tags --unshallow

      - name: 'Set up Java ${{ env.JAVA_VERSION }}'
        uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'zulu'

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - name: 'Initialize Node.js'
        working-directory: ./js
        run: npm ci

      - name: 'Setup Gradle'
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.event_name == 'pull_request' }}

      - name: 'Restore gradle.properties'
        env:
          GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
        shell: bash
        run: |
          mkdir -p ~/.gradle/
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "${GRADLE_PROPERTIES}" > ~/.gradle/gradle.properties
      - name: 'Make secrets folder'
        run: |
          mkdir ./secrets
        shell: bash
      - name: 'Write certificate to file'
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'cert.p7b'
          fileDir: './secrets'
          encodedString: ${{ secrets.CERT }}
      - name: 'Write keystore to file'
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'keystore.jks'
          fileDir: './secrets'
          encodedString: ${{ secrets.KEYSTORE }}

      - name: 'Make gradlew executable'
        run: chmod +x ./gradlew

#      - name: 'Release new versions'
#        id: release
#        run: |
#          ./gradlew release \
#          -Prelease.customUsername=${{ github.actor }} \
#          -Prelease.customPassword=${{ github.token }}

      - name: 'Get current version'
        id: version
        run: echo "::set-output name=version::$(./gradlew -q -Prelease.quiet cV)"

      - name: 'Publish new versions'
        id: publish
        run: ./gradlew githubRelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: 'Set up Java ${{ env.JAVA_VERSION }}'
        uses: actions/setup-java@v4
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'zulu'

      - name: 'Make gradlew executable'
        run: chmod +x ./gradlew

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: 'Generate and submit dependency graph'
        uses: gradle/actions/dependency-submission@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
