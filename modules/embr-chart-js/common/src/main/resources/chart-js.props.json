{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "AnimationsSpec": {
            "$ref": "#/definitions/__type_6"
        },
        "Array": {
            "items": {
                "anyOf": [
                    {
                        "items": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "number"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    {
                        "$ref": "#/definitions/Point"
                    },
                    {
                        "$ref": "#/definitions/BubbleDataPoint"
                    },
                    {
                        "type": "number"
                    }
                ]
            },
            "type": "array"
        },
        "BubbleDataPoint": {
            "properties": {
                "r": {
                    "description": "Bubble radius in pixels (not scaled).",
                    "type": "number"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ChartDatasetProperties.TData": {
            "$ref": "#/definitions/Array"
        },
        "ChartType": {
            "enum": [
                "bar",
                "bubble",
                "doughnut",
                "line",
                "pie",
                "polarArea",
                "radar",
                "scatter"
            ],
            "type": "string"
        },
        "Color": {
            "anyOf": [
                {
                    "$ref": "#/definitions/_DeepPartialObject_1"
                },
                {
                    "$ref": "#/definitions/_DeepPartialObject_2"
                },
                {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/_DeepPartialObject_1"
                            },
                            {
                                "$ref": "#/definitions/_DeepPartialObject_2"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "string",
                        "object"
                    ]
                }
            ]
        },
        "CoreInteractionOptions": {
            "$ref": "#/definitions/__type_7"
        },
        "InteractionAxis": {
            "enum": [
                "r",
                "x",
                "xy",
                "y"
            ],
            "type": "string"
        },
        "InteractionMode": {
            "enum": [
                "dataset",
                "index",
                "nearest",
                "point",
                "x",
                "y"
            ],
            "type": "string"
        },
        "PChartData": {
            "$ref": "#/definitions/__type_12"
        },
        "PChartDataset": {
            "properties": {
                "backgroundColor": {
                    "$ref": "#/definitions/Color"
                },
                "borderColor": {
                    "$ref": "#/definitions/Color"
                },
                "borderWidth": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/_DeepPartialObject_6"
                        },
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/_DeepPartialObject_6"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "number",
                                "object"
                            ]
                        }
                    ],
                    "default": 0,
                    "description": "Width of the border, number for all sides, object to specify width for each side specifically"
                },
                "clip": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/_DeepPartialObject_3"
                        },
                        {
                            "const": false,
                            "type": "boolean"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "How to clip relative to chartArea. Positive value allows overflow, negative value clips that many pixels inside chartArea. 0 = clip at chartArea. Clipping can also be configured per side: `clip: {left: 5, top: false, right: -2, bottom: 0}`"
                },
                "data": {
                    "$ref": "#/definitions/ChartDatasetProperties.TData"
                },
                "hidden": {
                    "default": false,
                    "description": "Configures the visibility state of the dataset. Set it to true, to hide the dataset from the chart.",
                    "type": "boolean"
                },
                "hoverBackgroundColor": {
                    "$ref": "#/definitions/Color"
                },
                "hoverBorderColor": {
                    "$ref": "#/definitions/Color"
                },
                "hoverBorderWidth": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "number",
                                "object"
                            ]
                        }
                    ]
                },
                "indexAxis": {
                    "default": "'x'",
                    "description": "The base axis of the chart. 'x' for vertical charts and 'y' for horizontal charts.",
                    "enum": [
                        "x",
                        "y"
                    ],
                    "type": "string"
                },
                "label": {
                    "description": "The label for the dataset which appears in the legend and tooltips.",
                    "type": "string"
                },
                "normalized": {
                    "description": "Chart.js is fastest if you provide data with indices that are unique, sorted, and consistent across datasets and provide the normalized: true option to let Chart.js know that you have done so.",
                    "type": "boolean"
                },
                "order": {
                    "description": "The drawing order of dataset. Also affects order for stacking, tooltip and legend.",
                    "type": "number"
                },
                "parsing": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/_DeepPartialObject_7"
                        },
                        {
                            "const": false,
                            "type": "boolean"
                        }
                    ],
                    "description": "How to parse the dataset. The parsing can be disabled by specifying parsing: false at chart options or dataset. If parsing is disabled, data must be sorted and in the formats the associated chart type and scales use internally."
                },
                "stack": {
                    "description": "The ID of the group to which this dataset belongs to (when stacked, each group will be a separate stack).",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/key"
                }
            },
            "type": "object"
        },
        "PChartOptions": {
            "$ref": "#/definitions/__type"
        },
        "Partial": {
            "$ref": "#/definitions/__type_5"
        },
        "Partial_1": {
            "$ref": "#/definitions/__type_8"
        },
        "Point": {
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Record": {
            "$ref": "#/definitions/__type_15"
        },
        "Scriptable": {
            "type": [
                "number",
                "object"
            ]
        },
        "Scriptable_1": {
            "anyOf": [
                {
                    "enum": [
                        "easeInBack",
                        "easeInBounce",
                        "easeInCirc",
                        "easeInCubic",
                        "easeInElastic",
                        "easeInExpo",
                        "easeInOutBack",
                        "easeInOutBounce",
                        "easeInOutCirc",
                        "easeInOutCubic",
                        "easeInOutElastic",
                        "easeInOutExpo",
                        "easeInOutQuad",
                        "easeInOutQuart",
                        "easeInOutQuint",
                        "easeInOutSine",
                        "easeInQuad",
                        "easeInQuart",
                        "easeInQuint",
                        "easeInSine",
                        "easeOutBack",
                        "easeOutBounce",
                        "easeOutCirc",
                        "easeOutCubic",
                        "easeOutElastic",
                        "easeOutExpo",
                        "easeOutQuad",
                        "easeOutQuart",
                        "easeOutQuint",
                        "easeOutSine",
                        "linear"
                    ],
                    "type": "string"
                },
                {
                    "type": "object"
                }
            ]
        },
        "Scriptable_2": {
            "type": [
                "object",
                "boolean"
            ]
        },
        "Scriptable_3": {
            "anyOf": [
                {
                    "$ref": "#/definitions/_DeepPartialObject_1"
                },
                {
                    "$ref": "#/definitions/_DeepPartialObject_2"
                },
                {
                    "type": [
                        "string",
                        "object"
                    ]
                }
            ]
        },
        "Scriptable_4": {
            "anyOf": [
                {
                    "$ref": "#/definitions/_DeepPartialObject_4"
                },
                {
                    "$ref": "#/definitions/_DeepPartialObject_5"
                },
                {
                    "type": [
                        "number",
                        "object"
                    ]
                }
            ]
        },
        "TransitionsSpec": {
            "$ref": "#/definitions/__type_11"
        },
        "_DeepPartialObject": {
            "$ref": "#/definitions/__type_1"
        },
        "_DeepPartialObject<{[key:string]:ScaleOptionsByType<\"radialLinear\"|keyofCartesianScaleTypeRegistry>;}>": {
            "type": "object"
        },
        "_DeepPartialObject_1": {
            "$ref": "#/definitions/__type_2"
        },
        "_DeepPartialObject_2": {
            "$ref": "#/definitions/__type_3"
        },
        "_DeepPartialObject_3": {
            "$ref": "#/definitions/__type_4"
        },
        "_DeepPartialObject_4": {
            "$ref": "#/definitions/__type_9"
        },
        "_DeepPartialObject_5": {
            "$ref": "#/definitions/__type_10"
        },
        "_DeepPartialObject_6": {
            "$ref": "#/definitions/__type_13"
        },
        "_DeepPartialObject_7": {
            "$ref": "#/definitions/__type_14"
        },
        "__type": {
            "properties": {
                "animation": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/_DeepPartialObject"
                        },
                        {
                            "const": false,
                            "type": "boolean"
                        }
                    ]
                },
                "animations": {
                    "$ref": "#/definitions/AnimationsSpec"
                },
                "aspectRatio": {
                    "default": 2,
                    "description": "Canvas aspect ratio (i.e. width / height, a value of 1 representing a square canvas). Note that this option is ignored if the height is explicitly defined either as attribute or via the style.",
                    "type": "number"
                },
                "backgroundColor": {
                    "$ref": "#/definitions/Scriptable_3",
                    "description": "base background color"
                },
                "borderColor": {
                    "$ref": "#/definitions/Scriptable_3",
                    "description": "base border color"
                },
                "clip": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/_DeepPartialObject_3"
                        },
                        {
                            "const": false,
                            "type": "boolean"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "How to clip relative to chartArea. Positive value allows overflow, negative value clips that many pixels inside chartArea. 0 = clip at chartArea. Clipping can also be configured per side: `clip: {left: 5, top: false, right: -2, bottom: 0}`"
                },
                "color": {
                    "$ref": "#/definitions/Scriptable_3",
                    "description": "base color"
                },
                "devicePixelRatio": {
                    "default": "window.devicePixelRatio",
                    "description": "Override the window's default devicePixelRatio.",
                    "type": "number"
                },
                "font": {
                    "$ref": "#/definitions/Partial",
                    "description": "base font"
                },
                "hover": {
                    "$ref": "#/definitions/CoreInteractionOptions"
                },
                "indexAxis": {
                    "default": "'x'",
                    "description": "The base axis of the chart. 'x' for vertical charts and 'y' for horizontal charts.",
                    "enum": [
                        "x",
                        "y"
                    ],
                    "type": "string"
                },
                "layout": {
                    "$ref": "#/definitions/Partial_1"
                },
                "locale": {
                    "default": "user's browser setting",
                    "description": "Locale used for number formatting (using `Intl.NumberFormat`).",
                    "type": "string"
                },
                "maintainAspectRatio": {
                    "default": true,
                    "description": "Maintain the original canvas aspect ratio (width / height) when resizing. For this option to work properly the chart must be in its own dedicated container.",
                    "type": "boolean"
                },
                "normalized": {
                    "description": "Chart.js is fastest if you provide data with indices that are unique, sorted, and consistent across datasets and provide the normalized: true option to let Chart.js know that you have done so.",
                    "type": "boolean"
                },
                "resizeDelay": {
                    "default": 0,
                    "description": "Delay the resize update by give amount of milliseconds. This can ease the resize process by debouncing update of the elements.",
                    "type": "number"
                },
                "responsive": {
                    "default": true,
                    "description": "Resizes the chart canvas when its container does (important note...).",
                    "type": "boolean"
                },
                "scales": {
                    "$ref": "#/definitions/_DeepPartialObject<{[key:string]:ScaleOptionsByType<\"radialLinear\"|keyofCartesianScaleTypeRegistry>;}>"
                },
                "transitions": {
                    "$ref": "#/definitions/TransitionsSpec"
                }
            },
            "type": "object"
        },
        "__type_1": {
            "properties": {
                "delay": {
                    "$ref": "#/definitions/Scriptable",
                    "default": 0,
                    "description": "Delay before starting the animations."
                },
                "duration": {
                    "$ref": "#/definitions/Scriptable",
                    "default": 1000,
                    "description": "The number of milliseconds an animation takes."
                },
                "easing": {
                    "$ref": "#/definitions/Scriptable_1",
                    "default": "'easeOutQuart'",
                    "description": "Easing function to use"
                },
                "loop": {
                    "$ref": "#/definitions/Scriptable_2",
                    "default": false,
                    "description": "If set to true, the animations loop endlessly."
                },
                "onComplete": {
                    "description": "Callback called when all animations are completed.",
                    "type": "object"
                },
                "onProgress": {
                    "description": "Callback called on each step of an animation.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "__type_10": {
            "properties": {
                "bottom": {
                    "type": "number"
                },
                "left": {
                    "type": "number"
                },
                "right": {
                    "type": "number"
                },
                "top": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "__type_11": {
            "type": "object"
        },
        "__type_12": {
            "properties": {
                "datasets": {
                    "items": {
                        "$ref": "#/definitions/PChartDataset"
                    },
                    "type": "array"
                },
                "labels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xLabels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "yLabels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "__type_13": {
            "properties": {
                "bottom": {
                    "type": "number"
                },
                "left": {
                    "type": "number"
                },
                "right": {
                    "type": "number"
                },
                "top": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "__type_14": {
            "type": "object"
        },
        "__type_15": {
            "type": "object"
        },
        "__type_2": {
            "properties": {
                "addColorStop": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "__type_3": {
            "properties": {
                "setTransform": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "__type_4": {
            "properties": {
                "bottom": {
                    "type": "number"
                },
                "height": {
                    "type": "number"
                },
                "left": {
                    "type": "number"
                },
                "right": {
                    "type": "number"
                },
                "top": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "__type_5": {
            "properties": {
                "family": {
                    "default": "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                    "description": "Default font family for all text, follows CSS font-family options.",
                    "type": "string"
                },
                "lineHeight": {
                    "default": 1.2,
                    "description": "Height of an individual line of text (see MDN).",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "size": {
                    "default": 12,
                    "description": "Default font size (in px) for text. Does not apply to radialLinear scale point labels.",
                    "type": "number"
                },
                "style": {
                    "default": "'normal'",
                    "description": "Default font style. Does not apply to tooltip title or footer. Does not apply to chart title. Follows CSS font-style options (i.e. normal, italic, oblique, initial, inherit)",
                    "enum": [
                        "inherit",
                        "initial",
                        "italic",
                        "normal",
                        "oblique"
                    ],
                    "type": "string"
                },
                "weight": {
                    "anyOf": [
                        {
                            "enum": [
                                "bold",
                                "bolder",
                                "lighter",
                                "normal"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "description": "Default font weight (boldness). (see MDN)."
                }
            },
            "type": "object"
        },
        "__type_6": {
            "type": "object"
        },
        "__type_7": {
            "properties": {
                "axis": {
                    "$ref": "#/definitions/InteractionAxis",
                    "description": "Defines which directions are used in calculating distances. Defaults to 'x' for 'index' mode and 'xy' in dataset and 'nearest' modes."
                },
                "includeInvisible": {
                    "default": false,
                    "description": "if true, the invisible points that are outside of the chart area will also be included when evaluating interactions.",
                    "type": "boolean"
                },
                "intersect": {
                    "default": true,
                    "description": "if true, the hover mode only applies when the mouse position intersects an item on the chart.",
                    "type": "boolean"
                },
                "mode": {
                    "$ref": "#/definitions/InteractionMode",
                    "default": "'nearest'",
                    "description": "Sets which elements appear in the tooltip. See Interaction Modes for details."
                }
            },
            "type": "object"
        },
        "__type_8": {
            "properties": {
                "autoPadding": {
                    "type": "boolean"
                },
                "padding": {
                    "$ref": "#/definitions/Scriptable_4"
                }
            },
            "type": "object"
        },
        "__type_9": {
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "key": {
            "enum": [
                "bar",
                "bubble",
                "doughnut",
                "line",
                "pie",
                "polarArea",
                "radar",
                "scatter"
            ],
            "type": "string"
        }
    },
    "properties": {
        "data": {
            "$ref": "#/definitions/PChartData"
        },
        "options": {
            "$ref": "#/definitions/PChartOptions"
        },
        "plugins": {
            "$ref": "#/definitions/Record"
        },
        "type": {
            "$ref": "#/definitions/ChartType"
        }
    },
    "type": "object"
}

