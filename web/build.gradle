plugins {
    id "base"
    id "com.github.node-gradle.node" version "7.0.1"
}

repositories {
    ivy {
        name = "Node.js"
        setUrl("https://nodejs.org/dist/")
        patternLayout {
            artifact("v[revision]/[artifact](-v[revision]-[classifier]).[ext]")
        }
        metadataSources {
            artifact()
        }
        content {
            includeModule("org.nodejs", "node")
        }
    }
}

node {
    version = "20.11.0"
    yarnVersion = "1.22.19"
    npmVersion = "10.2.4"
    download = false
    nodeProjectDir  = file(project.projectDir)
    distBaseUrl = null  // Base URL is configured in settings.gradle.kts
}

task npmPackages(type: NpmTask) {
    args = ["install"]

    inputs.files(
        fileTree(project.projectDir).matching {
            include("**/package.json")
        })

    dependsOn("${project.path}:npmSetup")
}

task buildBundles(type: NpmTask) {
    group "Web Build Tasks"
    description "Runs 'npm run build', executing the build script of the project root's package.json"
    args = ["run", "build"]
    dependsOn(npmPackages)

    inputs.files(project.fileTree("packages").matching {
        exclude("**/node_modules/**", "**/dist/**")
    }.toList())

    outputs.files(project.fileTree("packages").matching {
        include("**/dist/**")
    }.toList())

}

project.tasks.findByName("build").dependsOn(buildBundles)

configurations {
    example_perspective_component {
        canBeConsumed = true
        canBeResolved = false
    }
}

artifacts {
    example_perspective_component(file("./packages/example-perspective-component/dist/example-perspective-component.umd.js")) { builtBy buildBundles }
//    example_perspective_component(file("./packages/example-perspective-component/dist/example-perspective-component.mjs")) { builtBy buildBundles }
}
